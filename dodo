#!/usr/bin/env python3

# pylint: disable=C0111  # docstrings are always outdated and wrong
# pylint: disable=C0114  # Missing module docstring (missing-module-docstring)
# pylint: disable=W0511  # todo is encouraged
# pylint: disable=C0301  # line too long
# pylint: disable=R0902  # too many instance attributes
# pylint: disable=C0302  # too many lines in module
# pylint: disable=C0103  # single letter var names, func name too descriptive
# pylint: disable=R0911  # too many return statements
# pylint: disable=R0912  # too many branches
# pylint: disable=R0915  # too many statements
# pylint: disable=R0913  # too many arguments
# pylint: disable=R1702  # too many nested blocks
# pylint: disable=R0914  # too many local variables
# pylint: disable=R0903  # too few public methods
# pylint: disable=E1101  # no member for base
# pylint: disable=W0201  # attribute defined outside __init__
# pylint: disable=R0916  # Too many boolean expressions in if statement
# pylint: disable=C0305  # Trailing newlines editor should fix automatically, pointless warning


import os
import sys
import time
from decimal import Decimal
from decimal import InvalidOperation

if len(sys.argv) < 2:
    print(sys.argv[0], '[interval_in_seconds]', 'command', file=sys.stderr)
    sys.exit(1)

index = 1
try:
    delay = Decimal(sys.argv[1])
    index = 2
except IndexError:
    assert False
except InvalidOperation as e:
    delay = Decimal(1)
    sys.exit(1)

while True:
    os.system(' '.join(sys.argv[index:]))
    time.sleep(float(delay))

##!/bin/sh
#
#is_number()
#{
#    #echo "${1}" | grep -q "^-\?[0-9]*$"
#    #echo "${1}" | grep -q "^[0-9]+([.][0-9]+)?$"
#    #echo "${1}" | grep "^[0-9]*[.][0-9]*$"
#    echo "${1}" | grep -E "^[-+]?[0-9]+\.?[0-9]*$"
#}
#
#argcount=1
#usage="interval_in_seconds command"
#test "$#" -ge "${argcount}" || { echo "$0 ${usage}" > /dev/stderr && exit 1 ; } #"-ge=>=" "-gt=>" "-le=<=" "-lt=<" "-ne=!="
#
#if is_number "${1}";
#then
#    seconds="${1}"
#    shift
#else
#    seconds=1   # default
#fi
#
#set -o nounset
#
#random="0"
#
#if [ "${seconds}" == "--random" ];
#then
#    random="1"
#    #seconds=`shuf -i 1-100 -n 1`
#    #echo "${seconds}" > /dev/stderr
#fi
#
#
#while :
#do
#    "${@}"
#    if [ "${random}" == "1" ];
#    then
#        seconds=`shuf -i 1-100 -n 1`
#        #echo "random: ${seconds}" > /dev/stderr
#    fi
#    #echo "${seconds}" > /dev/stderr
#    sleep "${seconds}" || exit 1
#    #"${@}"  # before, so it starts without delay
#    #seconds=`shuf -i 1-100 -n 1`
#done
