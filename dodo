#!/usr/bin/env python3
# -*- coding: utf8 -*-

# pylint: disable=useless-suppression             # [I0021]
# pylint: disable=missing-docstring               # [C0111] docstrings are always outdated and wrong
# pylint: disable=missing-module-docstring        # [C0114]
# pylint: disable=fixme                           # [W0511] todo is encouraged
# pylint: disable=line-too-long                   # [C0301]
# pylint: disable=too-many-instance-attributes    # [R0902]
# pylint: disable=too-many-lines                  # [C0302] too many lines in module
# pylint: disable=invalid-name                    # [C0103] single letter var names, name too descriptive
# pylint: disable=too-many-return-statements      # [R0911]
# pylint: disable=too-many-branches               # [R0912]
# pylint: disable=too-many-statements             # [R0915]
# pylint: disable=too-many-arguments              # [R0913]
# pylint: disable=too-many-nested-blocks          # [R1702]
# pylint: disable=too-many-locals                 # [R0914]
# pylint: disable=too-few-public-methods          # [R0903]
# pylint: disable=no-member                       # [E1101] no member for base
# pylint: disable=attribute-defined-outside-init  # [W0201]
# pylint: disable=too-many-boolean-expressions    # [R0916] in if statement
from __future__ import annotations

import os
import sys
import time
from decimal import Decimal
from decimal import InvalidOperation

if len(sys.argv) < 2:
    print(sys.argv[0], '[interval_in_seconds]', 'command', file=sys.stderr)
    sys.exit(1)

index = 1
try:
    delay = Decimal(sys.argv[1])
    index = 2
except IndexError:
    assert False
except InvalidOperation:
    delay = Decimal(1)
    sys.exit(1)

while True:
    os.system(' '.join(sys.argv[index:]))
    time.sleep(float(delay))

##!/bin/sh
#
#is_number()
#{
#    #echo "${1}" | grep -q "^-\?[0-9]*$"
#    #echo "${1}" | grep -q "^[0-9]+([.][0-9]+)?$"
#    #echo "${1}" | grep "^[0-9]*[.][0-9]*$"
#    echo "${1}" | grep -E "^[-+]?[0-9]+\.?[0-9]*$"
#}
#
#argcount=1
#usage="interval_in_seconds command"
#test "$#" -ge "${argcount}" || { echo "$0 ${usage}" > /dev/stderr && exit 1 ; } #"-ge=>=" "-gt=>" "-le=<=" "-lt=<" "-ne=!="
#
#if is_number "${1}";
#then
#    seconds="${1}"
#    shift
#else
#    seconds=1   # default
#fi
#
#set -o nounset
#
#random="0"
#
#if [ "${seconds}" == "--random" ];
#then
#    random="1"
#    #seconds=`shuf -i 1-100 -n 1`
#    #echo "${seconds}" > /dev/stderr
#fi
#
#
#while :
#do
#    "${@}"
#    if [ "${random}" == "1" ];
#    then
#        seconds=`shuf -i 1-100 -n 1`
#        #echo "random: ${seconds}" > /dev/stderr
#    fi
#    #echo "${seconds}" > /dev/stderr
#    sleep "${seconds}" || exit 1
#    #"${@}"  # before, so it starts without delay
#    #seconds=`shuf -i 1-100 -n 1`
#done
